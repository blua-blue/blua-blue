<?php
/* Generated by neoan3-cli */

namespace Neoan3\Components;

use Neoan3\Apps\Db;
use Neoan3\Apps\Stateless;
use Neoan3\Core\RouteException;
use Neoan3\Frame\Neoan;
use Neoan3\Model\ImageModel;
use Neoan3\Model\UserModel;

class Comment extends Neoan
{

    /**
     * @param array $body
     *
     * @return array
     * @throws RouteException
     * @throws \Neoan3\Apps\DbException
     */
    function postComment(array $body)
    {
        $jwt = Stateless::restrict('user');
        if(isset($body['articleId']) && isset($body['comment'])){
            $id = Db::uuid()->uuid;
            Db::article_comment([
                'id' => '$' . $id,
                'article_id' => '$' . $body['articleId'],
                'user_id' => '$' . $jwt['jti'],
                'comment' => '=' . $body['comment']
            ]);
            return ['id'=>$id];
        }
        throw new RouteException('Bad data',400);
    }

    function getComment(array $body)
    {
        $comments = [];
        if (isset($body['articleId'])) {
            $comments = Db::easy('article_comment.* #article_comment.insert_date:inserted',
                ['article_id' => '$' . $body['articleId'], '^delete_date'], ['orderBy' => ['insert_date', 'asc']]);
            foreach ($comments as $i => $comment) {
                $author = UserModel::byId($comment['user_id']);
                $comments[$i]['author'] = [
                    'user_name' => $author['user_name']
                ];
                $comments[$i]['author']['image'] = $author['image_id'] ? ImageModel::undeletedById($author['image_id']) : 'asset/img/blank-profile.png';

            }
        }
        return $comments;
    }

}
