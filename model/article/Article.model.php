<?php
/* Generated by neoan3-cli */

namespace Neoan3\Model;


use Neoan3\Apps\Db;
use Neoan3\Apps\Ops;

class ArticleModel extends IndexModel {
    static function byId($id){
        $tables = ['content'];
        $article = parent::first(Db::easy('article.* #article.insert_date:inserted',['id'=>'$'.$id]));
        if(!empty($article)){
            $article['image'] = [];
            if(!empty($article['image_id'])){
                $article['image'] = ImageModel::undeletedById($article['image_id']);
            }
            $article['author'] = parent::first(Db::easy('user.*',['id'=>'$'.$article['author_user_id']]));
            $article['category'] = parent::first(Db::easy('category.*',['id'=>'$'.$article['category_id']]));
            foreach($tables as $table){
                $article[$table] = Db::easy('article_'.$table.'.*',['article_id'=>'$'.$id,'^delete_date'],['orderBy'=>['sort','ASC']]);
            }
        }

        return $article;
    }
    static function bySlug($link){
        $article = Db::easy('article.id',['slug'=>$link]);
        if(!empty($article)){
            $article = self::byId($article[0]['id']);
        }
        return $article;
    }

    static function find($condition){
        $articles = [];
        foreach($condition as $key => $value){
            if(strpos($key,'_id')!== false || $key == 'id'){
                $condition[$key] = '$'.$value;
            }
        }
        $ids = Db::easy('article.id',$condition);
        foreach($ids as $id){
            $articles[] = self::byId($id['id']);
        }

        return $articles;
    }

}
